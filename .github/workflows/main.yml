name: Deploy to Amazon ECS

on:
  workflow_dispatch:
  # push:
  #  branches:
  #    - main

env:
  AWS_REGION: ca-central-1
  ECR_REPOSITORY: 801544328480.dkr.ecr.ca-central-1.amazonaws.com/kevinhe.dev
  ECS_SERVICE: kevinhe_dev_service
  ECS_CLUSTER: kevinhe-dev
  ECS_TASK_DEFINITION: kevinhe_dev_task

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        cd frontend
        docker build -t $ECR_REPOSITORY .
        docker push $ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REPOSITORY:latest"

    - name: Deploy Amazon ECS task definition
      id: deploy-task
      run: |
        aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment --region $AWS_REGION
